upstream api_servers {
    # Define our backend servers with weight for load balancing
    server api:3000 weight=1;
    server api2:3000 weight=1;
    
    # Keep connections alive for better performance
    keepalive 16;
}

server {
    listen 80;
    server_name localhost;
    
    # Health check endpoint
    location /health {
        proxy_pass http://api_servers/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Health check settings
        health_check interval=10 fails=3 passes=2;
        
        access_log off;
    }
    
    # WebSocket support
    location /socket.io/ {
        proxy_pass http://api_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400; # WebSocket timeouts are longer
    }
    
    # API endpoints
    location / {
        proxy_pass http://api_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add custom headers
        add_header X-Load-Balancer "nginx";
    }
    
    # Cache static files for better performance
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        proxy_pass http://api_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }
    
    # Error handling
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}